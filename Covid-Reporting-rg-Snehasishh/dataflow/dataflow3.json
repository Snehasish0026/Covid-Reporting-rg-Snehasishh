{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_admission_data_snehasish",
						"type": "DatasetReference"
					},
					"name": "hospitaadmissiondatasnehasish"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup_snehasish",
						"type": "DatasetReference"
					},
					"name": "countrysourcedata"
				},
				{
					"dataset": {
						"referenceName": "ds_dimdate_lookup_snehasish",
						"type": "DatasetReference"
					},
					"name": "dimdatesource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_hospital_admission_sink",
						"type": "DatasetReference"
					},
					"name": "weeklysink"
				},
				{
					"dataset": {
						"referenceName": "ds_hospital_admission_daily",
						"type": "DatasetReference"
					},
					"name": "dailysink"
				}
			],
			"transformations": [
				{
					"name": "countrylookup"
				},
				{
					"name": "selectrequiredfields"
				},
				{
					"name": "conditionalsplitweekly"
				},
				{
					"name": "dimdateaggregate"
				},
				{
					"name": "joinwithdate"
				},
				{
					"name": "weeklypivot"
				},
				{
					"name": "dailypivot"
				},
				{
					"name": "weeklysort"
				},
				{
					"name": "dailysort"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> hospitaadmissiondatasnehasish",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> countrysourcedata",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dimdatesource",
				"hospitaadmissiondatasnehasish, countrysourcedata lookup(hospitaadmissiondatasnehasish@country == countrysourcedata@country,",
				"     multiple: true,",
				"     broadcast: 'auto')~> countrylookup",
				"countrylookup select(mapColumn(",
				"          country = hospitaadmissiondatasnehasish@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectrequiredfields",
				"selectrequiredfields split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new  ICU admissions per 100k',",
				"     disjoint: false) ~> conditionalsplitweekly@(weekly, daily)",
				"dimdatesource aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year,2,'0')),",
				"     Week_start_date = min(date),",
				"          week_end_date = max(date)) ~> dimdateaggregate",
				"conditionalsplitweekly@weekly, dimdateaggregate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinwithdate",
				"joinwithdate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          reported_year_week,",
				"          population,",
				"          source,",
				"          Week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator),",
				"     count = sum(value),",
				"     columnNaming: '$V$N',",
				"     lateral: true) ~> weeklypivot",
				"conditionalsplitweekly@daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          reported_date,",
				"          source,",
				"          population),",
				"     pivotBy(indicator, ['dailyhospitaladmission', 'dailyICUadmission']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> dailypivot",
				"weeklypivot sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> weeklysort",
				"dailypivot sort(desc(reported_date, true),",
				"     asc(country, true)) ~> dailysort",
				"weeklysort sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> weeklysink",
				"dailysort sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> dailysink"
			]
		}
	}
}